{"ast":null,"code":"var _jsxFileName = \"/Users/ad/Downloads/Pickbazar - React GraphQL Ecommerce Template/Fashion-Shop-Web/packages/shop/containers/Profile/Order/OrderCard/orderCardMobile.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Table from 'rc-table';\nimport Collapse, { Panel } from 'rc-collapse';\nimport Progress from 'components/ProgressBox/ProgressBox';\nimport { OrderListHeader, TrackID, Status, OrderMetas, Meta, CardWrapper, OrderDetail, DeliveryInfo, DeliveryAddress, Address, CostCalculation, PriceRow, Price, ProgressWrapper, OrderTable } from './OrderCard.style';\nimport { CURRENCY } from 'helper/constant';\nconst components = {\n  table: OrderTable\n};\n\nconst OrderCard = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses = ['accordion'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Collapse, {\n    accordion: true,\n    className: addAllClasses.join(' '),\n    defaultActiveKey: \"active\",\n    expandIcon: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, orders.map(order => __jsx(Panel, {\n    header: __jsx(CardWrapper, {\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(OrderListHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(TrackID, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Order \", __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"#\", order.id)), __jsx(Status, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, progressData[order.status - 1])), __jsx(OrderMetas, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Order Date: \", __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, order.date)), __jsx(Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Delivery Time: \", __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, order.deliveryTime)), __jsx(Meta, {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Total Price:\", __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, CURRENCY, order.amount)))),\n    headerClass: \"accordion-title\",\n    key: order.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(OrderDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(DeliveryInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(DeliveryAddress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Delivery Address\"), __jsx(Address, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, order.deliveryAddress)), __jsx(CostCalculation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(PriceRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Subtotal\", __jsx(Price, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, CURRENCY, order.subtotal)), __jsx(PriceRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Discount\", __jsx(Price, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, CURRENCY, order.discount)), __jsx(PriceRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Delivery Fee\", __jsx(Price, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, CURRENCY, order.deliveryFee)), __jsx(PriceRow, {\n    className: \"grandTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Total\", __jsx(Price, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, CURRENCY, order.amount)))), __jsx(ProgressWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Progress, {\n    data: progressData,\n    status: order.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(Table, {\n    columns: columns,\n    data: order.products,\n    rowKey: record => record.id,\n    components: components,\n    scroll: {\n      y: 250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))))));\n};\n\nexport default OrderCard;","map":{"version":3,"sources":["/Users/ad/Downloads/Pickbazar - React GraphQL Ecommerce Template/Fashion-Shop-Web/packages/shop/containers/Profile/Order/OrderCard/orderCardMobile.tsx"],"names":["React","Table","Collapse","Panel","Progress","OrderListHeader","TrackID","Status","OrderMetas","Meta","CardWrapper","OrderDetail","DeliveryInfo","DeliveryAddress","Address","CostCalculation","PriceRow","Price","ProgressWrapper","OrderTable","CURRENCY","components","table","OrderCard","onClick","className","columns","progressData","orders","addAllClasses","push","join","map","order","id","status","date","deliveryTime","amount","deliveryAddress","subtotal","discount","deliveryFee","products","record","y"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'rc-table';\nimport Collapse, { Panel } from 'rc-collapse';\nimport Progress from 'components/ProgressBox/ProgressBox';\n\nimport {\n  OrderListHeader,\n  TrackID,\n  Status,\n  OrderMetas,\n  Meta,\n  CardWrapper,\n  OrderDetail,\n  DeliveryInfo,\n  DeliveryAddress,\n  Address,\n  CostCalculation,\n  PriceRow,\n  Price,\n  ProgressWrapper,\n  OrderTable,\n} from './OrderCard.style';\n\nimport { CURRENCY } from 'helper/constant';\n\ntype MobileOrderCardProps = {\n  orderId?: any;\n  onClick?: (e: any) => void;\n  className?: any;\n  status?: any;\n  date?: any;\n  deliveryTime?: any;\n  amount?: number;\n  tableData?: any;\n  columns?: any;\n  progressData?: any;\n  progressStatus?: any;\n  address?: string;\n  subtotal?: number;\n  discount?: number;\n  deliveryFee?: number;\n  grandTotal?: number;\n  orders?: any;\n};\n\nconst components = {\n  table: OrderTable,\n};\n\nconst OrderCard: React.FC<MobileOrderCardProps> = ({\n  onClick,\n  className,\n  columns,\n  progressData,\n  orders,\n}) => {\n  //   const displayDetail = className === 'active' ? '100%' : '0';\n  const addAllClasses: string[] = ['accordion'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n  return (\n    <>\n      <Collapse\n        accordion={true}\n        className={addAllClasses.join(' ')}\n        defaultActiveKey=\"active\"\n        expandIcon={() => {}}\n      >\n        {orders.map((order: any) => (\n          <Panel\n            header={\n              <CardWrapper onClick={onClick}>\n                <OrderListHeader>\n                  <TrackID>\n                    Order <span>#{order.id}</span>\n                  </TrackID>\n                  <Status>{progressData[order.status - 1]}</Status>\n                </OrderListHeader>\n\n                <OrderMetas>\n                  <Meta>\n                    Order Date: <span>{order.date}</span>\n                  </Meta>\n                  <Meta>\n                    Delivery Time: <span>{order.deliveryTime}</span>\n                  </Meta>\n                  <Meta className=\"price\">\n                    Total Price:\n                    <span>\n                      {CURRENCY}\n                      {order.amount}\n                    </span>\n                  </Meta>\n                </OrderMetas>\n              </CardWrapper>\n            }\n            headerClass=\"accordion-title\"\n            key={order.id}\n          >\n            <OrderDetail>\n              <DeliveryInfo>\n                <DeliveryAddress>\n                  <h3>Delivery Address</h3>\n                  <Address>{order.deliveryAddress}</Address>\n                </DeliveryAddress>\n\n                <CostCalculation>\n                  <PriceRow>\n                    Subtotal\n                    <Price>\n                      {CURRENCY}\n                      {order.subtotal}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow>\n                    Discount\n                    <Price>\n                      {CURRENCY}\n                      {order.discount}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow>\n                    Delivery Fee\n                    <Price>\n                      {CURRENCY}\n                      {order.deliveryFee}\n                    </Price>\n                  </PriceRow>\n                  <PriceRow className=\"grandTotal\">\n                    Total\n                    <Price>\n                      {CURRENCY}\n                      {order.amount}\n                    </Price>\n                  </PriceRow>\n                </CostCalculation>\n              </DeliveryInfo>\n\n              <ProgressWrapper>\n                <Progress data={progressData} status={order.status} />\n              </ProgressWrapper>\n\n              <Table\n                columns={columns}\n                data={order.products}\n                rowKey={record => record.id}\n                components={components}\n                scroll={{ y: 250 }}\n              />\n            </OrderDetail>\n          </Panel>\n        ))}\n      </Collapse>\n    </>\n  );\n};\n\nexport default OrderCard;\n"]},"metadata":{},"sourceType":"module"}