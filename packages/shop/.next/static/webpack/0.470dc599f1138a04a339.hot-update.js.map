{"version":3,"file":"static/webpack/0.470dc599f1138a04a339.hot-update.js","sources":["webpack:///./containers/LayoutContainer/Header/MobileHeader.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { openModal, closeModal } from \"@redq/reuse-modal\";\nimport { DrawerProvider } from \"contexts/drawer/drawer.provider\";\nimport Popover from \"components/Popover/Popover\";\nimport MobileDrawer from \"./MobileDrawer\";\nimport {\n  MobileHeaderWrapper,\n  MobileHeaderInnerWrapper,\n  DrawerWrapper,\n  LogoWrapper,\n  SearchWrapper,\n  SearchModalWrapper,\n  SearchModalClose,\n  Logo,\n  SelectedLang,\n  LanguageItem,\n  LangSwithcer,\n  Flag,\n} from \"./Header.style\";\nimport { FormattedMessage } from \"react-intl\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\nimport { SearchContext } from \"contexts/search/search.context\";\nimport Logoimage from \"image/logo.svg\";\nimport {\n  HOME_PAGE,\n  GROCERY_PAGE,\n  MAKEUP_PAGE,\n  CLOTHING,\n  BAGS_PAGE,\n  FURNITURE_PAGE,\n  BOOK_PAGE,\n} from \"constants/navigation\";\nimport LanguageContext from \"contexts/language/language.context\";\n\nimport {\n  SearchIcon,\n  LongArrowLeft,\n  DEFlag,\n  CNFlag,\n  USFlag,\n  ILFlag,\n  ESFlag,\n  SAFlag,\n} from \"components/AllSvgIcon\";\n\ntype MobileHeaderProps = {\n  className?: string;\n  pathname?: string;\n  closeSearch?: any;\n};\ntype SearchModalProps = {\n  state?: any;\n  handleSearch?: any;\n  pathname?: string;\n};\n\nconst LanguageArray = [\n  { id: \"ar\", label: \"Arabic\", intlLangName: \"intlArabic\", icon: <SAFlag /> },\n  { id: \"zh\", label: \"Chinese\", intlLangName: \"intlChinese\", icon: <CNFlag /> },\n  { id: \"en\", label: \"English\", intlLangName: \"intlEnglish\", icon: <USFlag /> },\n  { id: \"de\", label: \"German\", intlLangName: \"intlGerman\", icon: <DEFlag /> },\n  { id: \"he\", label: \"Hebrew\", intlLangName: \"intlHebrew\", icon: <ILFlag /> },\n  { id: \"es\", label: \"Spanish\", intlLangName: \"intlSpanish\", icon: <ESFlag /> },\n];\n\nconst SearchModal: React.FC<SearchModalProps> = ({\n  state,\n  pathname,\n  handleSearch,\n}) => {\n  const router = useRouter();\n  const [text, setText] = useState(state.text || \"\");\n  const handleSearchInput = (text: string) => {\n    setText(text);\n  };\n  const { page, ...urlState } = state;\n\n  const handleClickSearchButton = () => {\n    handleSearch(text);\n    router.push({\n      pathname: pathname === \"/\" ? \"/grocery\" : pathname,\n      query: {\n        ...urlState,\n        text,\n      },\n    });\n    closeModal();\n  };\n  return (\n    <SearchModalWrapper>\n      <SearchModalClose type=\"submit\" onClick={() => closeModal()}>\n        <LongArrowLeft />\n      </SearchModalClose>\n      <SearchBox\n        className=\"header-modal-search\"\n        bordered={false}\n        inputStyle={{ height: 35 }}\n        buttonText=\"\"\n        placeholder=\"Search\"\n        handleSearch={handleSearchInput}\n        value={text}\n        onClick={handleClickSearchButton}\n      />\n    </SearchModalWrapper>\n  );\n};\n\nconst MobileHeader: React.FC<MobileHeaderProps> = (props) => {\n  const {\n    state: { lang },\n    toggleLanguage,\n  } = useContext<any>(LanguageContext);\n\n  const { state, dispatch } = useContext(SearchContext);\n  const { className, pathname, closeSearch } = props;\n\n  const selectedLangindex = LanguageArray.findIndex((x) => x.id === lang);\n\n  const handleSearch = (text: string) => {\n    dispatch({\n      type: \"UPDATE\",\n      payload: {\n        ...state,\n        text,\n      },\n    });\n  };\n  const handleSearchModal = () => {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: \"search-modal-mobile\",\n        width: \"100%\",\n        height: \"100%\",\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      componentProps: { state, pathname, handleSearch },\n      closeComponent: () => <div />,\n    });\n  };\n\n  const handleToggleLanguage = (e) => {\n    toggleLanguage(e.target.value);\n    console.log(e.target.value, \"switcher\");\n  };\n\n  const LanguageMenu = (item: any) => {\n    return (\n      <LanguageItem\n        onClick={handleToggleLanguage}\n        key={item.id}\n        value={item.id}\n      >\n        <span>{item.icon}</span>\n        <FormattedMessage id={item.intlLangName} defaultMessage={item.label} />\n      </LanguageItem>\n    );\n  };\n\n  const isHomePage =\n    pathname === HOME_PAGE ||\n    pathname === GROCERY_PAGE ||\n    pathname === CLOTHING ||\n    pathname === MAKEUP_PAGE ||\n    pathname === BOOK_PAGE ||\n    pathname === FURNITURE_PAGE ||\n    pathname === BAGS_PAGE;\n\n  return (\n    <DrawerProvider>\n      <MobileHeaderWrapper>\n        <MobileHeaderInnerWrapper className={className}>\n          <DrawerWrapper>\n            <MobileDrawer />\n          </DrawerWrapper>\n\n          <LogoWrapper>\n            <Logo>\n              <Link href={HOME_PAGE}>\n                <a>\n                  <img src={Logoimage} alt=\"pickbazar-admin\" />\n                </a>\n              </Link>\n            </Logo>\n          </LogoWrapper>\n\n          {/* <LangSwithcer>\n            <Popover\n              className='right'\n              handler={\n                <SelectedLang>\n                  <Flag style={{ margin: 0 }}>\n                    {LanguageArray[selectedLangindex].icon}\n                  </Flag>\n                </SelectedLang>\n              }\n              content={<>{LanguageArray.map(LanguageMenu)}</>}\n            />\n          </LangSwithcer> */}\n\n          {isHomePage ? (\n            <SearchWrapper\n              onClick={handleSearchModal}\n              className=\"searchIconWrapper\"\n            >\n              <SearchIcon />\n            </SearchWrapper>\n          ) : null}\n        </MobileHeaderInnerWrapper>\n      </MobileHeaderWrapper>\n    </DrawerProvider>\n  );\n};\n\nexport default MobileHeader;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AACA;AACA;AACA;AACA;AASA;AAEA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AANA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}